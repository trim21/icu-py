name: tests

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
    tags-ignore:
      - "*"

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/_build_wheels.yaml

  twine-check:
    name: Check dist
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - run: pipx run twine check --strict dist/*
#
#  test-cp-bench:
#    needs: [ build ]
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version:
#          - "3.10"
#
#    runs-on: "ubuntu-24.04"
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#          cache: "pip"
#
#      - uses: actions/download-artifact@v4
#        with:
#          pattern: wheels-*
#          path: dist
#          merge-multiple: true
#
#      - run: pip install -r requirements.txt
#      - run: pip install bencode2 --no-index --find-links ./dist/
#
#      - name: Run benchmarks
#        uses: CodSpeedHQ/action@v3
#        with:
#          token: ${{ secrets.CODSPEED_TOKEN }}
#          run: python -m pytest tests/bench.py --assert-pkg-compiled=true --codspeed
#
#  test-cp-py:
#    strategy:
#      fail-fast: false
#      max-parallel: 5
#      matrix:
#        os:
#          - "windows-latest"
#          - "ubuntu-24.04"
#          - "macos-13"
#          - "macos-14"
#        python-version:
#          - "3.9"
#          - "3.10"
#          - "3.11"
#          - "3.12"
#          - "3.13"
#        exclude:
#          - { os: macos-14, python-version: '3.9' }
#
#    runs-on: "${{ matrix.os }}"
#
#    env:
#      PY_BENCODE2_PURE_PYTHON: '1'
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#          cache: "pip"
#
#      - run: pip install -e .
#      - run: pip install -r requirements.txt
#
#      - run: python -m pytest --cov --assert-pkg-compiled=false
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#
#  test-c-cov:
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version:
#          - "3.9"
#          - "3.10"
#          - "3.11"
#          - "3.12"
#          - "3.13"
#
#    runs-on: "ubuntu-24.04"
#
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: 'true'
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#          cache: "pip"
#
#      - run: pip install -r requirements.txt
#      - run: python setup.py build_ext --inplace --force
#        env:
#          CXX: g++
#          CPPFLAGS: --coverage
#
#      - run: coverage run -m pytest --cov --assert-pkg-compiled=true
#        env:
#          PYTHONPATH: src
#
#      - uses: awalsh128/cache-apt-pkgs-action@latest
#        with:
#          packages: lcov
#          version: 1.0
#
#      - run: lcov --ignore-errors mismatch --capture --directory build --include $PWD'/src/**/*' --no-external --base-directory . --output-file coverage.info
#
#      - run: lcov -l coverage.info
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: coverage.info
#
#
#  test-cp-py-nogil:
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          #          - "windows-latest"
#          - "ubuntu-24.04"
#    #          - "macos-14"
#
#    runs-on: "${{ matrix.os }}"
#    env:
#      PY_BENCODE2_PURE_PYTHON: '1'
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: actions/download-artifact@v4
#        with:
#          pattern: wheels-*
#          path: dist
#          merge-multiple: true
#
#      - uses: deadsnakes/action@v3.2.0
#        with:
#          python-version: 3.13
#          nogil: true
#
#      - run: pip install -e .
#      - run: pip install -r requirements.txt
#
#      - run: python -m pytest --cov --assert-pkg-compiled=false
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#
#
#  test-pp:
#    strategy:
#      matrix:
#        os:
#          - "windows-latest"
#          - "ubuntu-22.04"
#          - "macos-13"
#          - "macos-14"
#        python-version:
#          - 'pypy3.9'
#          - 'pypy3.10'
#
#    runs-on: "${{ matrix.os }}"
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - run: pip install -e .
#      - run: pip install -r requirements.txt
#
#      - name: Run pytest
#        run: python -m pytest --cov --assert-pkg-compiled=false
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}

  test-pass:
    needs:
#      - test-pp
#      - test-cp-py
#      - test-cp-bench
#      - test-cp-py-nogil
#      - test-c-cov
      - twine-check
    runs-on: 'ubuntu-latest'
    steps:
      - run: 'echo success'
